#!/bin/bash

# Script de d√©marrage du backend - Syst√®me de Gestion des Stocks

echo "üöÄ D√©marrage du syst√®me de gestion des stocks..."

# Couleurs pour les messages
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# V√©rifier si PostgreSQL est install√©
if ! command -v psql &> /dev/null; then
    echo -e "${RED}‚ùå PostgreSQL n'est pas install√©${NC}"
    echo "Installation requise: sudo apt-get install postgresql"
    exit 1
fi

# V√©rifier si PostgreSQL est en cours d'ex√©cution
if ! sudo systemctl is-active --quiet postgresql; then
    echo -e "${YELLOW}‚ö†Ô∏è  PostgreSQL n'est pas d√©marr√©. D√©marrage...${NC}"
    sudo systemctl start postgresql
fi

# V√©rifier si la base de donn√©es existe
echo "üìä V√©rification de la base de donn√©es..."
DB_EXISTS=$(sudo -u postgres psql -tAc "SELECT 1 FROM pg_database WHERE datname='supermarket_db'")

if [ "$DB_EXISTS" != "1" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Base de donn√©es non trouv√©e. Cr√©ation...${NC}"
    sudo -u postgres psql -c "CREATE DATABASE supermarket_db;"
    echo -e "${GREEN}‚úÖ Base de donn√©es cr√©√©e${NC}"
else
    echo -e "${GREEN}‚úÖ Base de donn√©es existante${NC}"
fi

# Nettoyer et compiler
echo "üî® Compilation du projet..."
./mvnw clean package -DskipTests

if [ $? -eq 0 ]; then
    echo -e "${GREEN}‚úÖ Compilation r√©ussie${NC}"
else
    echo -e "${RED}‚ùå Erreur de compilation${NC}"
    exit 1
fi

# D√©marrer l'application
echo "üöÄ D√©marrage de l'application..."
echo "üìç L'application sera accessible sur http://localhost:8080"
echo "üìö Documentation API: http://localhost:8080/swagger-ui.html"
echo ""
echo "Pour tester les alertes de stock:"
echo "  curl http://localhost:8080/api/stocks/alertes"
echo ""
echo "Pour g√©n√©rer des commandes automatiques:"
echo "  curl -X POST http://localhost:8080/api/commandes/generer-automatiques"
echo ""

./mvnw spring-boot:run

